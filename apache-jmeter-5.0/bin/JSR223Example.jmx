<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="jp@gc - Dummy Sampler" enabled="true">
          <boolProp name="WAITING">true</boolProp>
          <boolProp name="SUCCESFULL">true</boolProp>
          <stringProp name="RESPONSE_CODE">200</stringProp>
          <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
          <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
          <stringProp name="RESPONSE_DATA">{
  &quot;posts&quot;: [
    {
      &quot;id&quot;: 1,
      &quot;title&quot;: &quot;json-server&quot;,
      &quot;author&quot;: &quot;typicode&quot;
    },
    {
      &quot;id&quot;: 2,
      &quot;title&quot;: &quot;harvey&quot;,
      &quot;author&quot;: &quot;answerdigital&quot;
    },
    {
      &quot;id&quot;: 3,
      &quot;title&quot;: &quot;sembhy&quot;,
      &quot;author&quot;: &quot;microsoft&quot;
    },
    {
      &quot;id&quot;: 9,
      &quot;title&quot;: &quot;json-server&quot;,
      &quot;author&quot;: &quot;Harvey Sembhy&quot;
    },
    {
      &quot;id&quot;: 7,
      &quot;title&quot;: &quot;new test&quot;,
      &quot;author&quot;: &quot;test auther&quot;
    },
    {
      &quot;id&quot;: 29,
      &quot;title&quot;: &quot;Harvey&quot;,
      &quot;author&quot;: &quot;Answer Digital&quot;
    }
  ],
  &quot;comments&quot;: [
    {
      &quot;id&quot;: 1,
      &quot;body&quot;: &quot;some comment&quot;,
      &quot;postId&quot;: 1
    },
    {
      &quot;id&quot;: 2,
      &quot;body&quot;: &quot;something interesting&quot;,
      &quot;postId&quot;: 2
    },
    {
      &quot;id&quot;: 3,
      &quot;body&quot;: &quot;was able to create a local server today&quot;,
      &quot;postId&quot;: 3
    }
  ],
  &quot;profile&quot;: [
    {
      &quot;Harvey&quot;: &quot;Answer Digital&quot;
    },
    {
      &quot;Alfred&quot;: &quot;BatCave&quot;
    }
  ]
}</stringProp>
          <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
          <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
          <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
        </kg.apc.jmeter.samplers.DummySampler>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="cacheKey">false</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper;
import java.util.*;

def failureMessage = &quot;&quot;;
def jsonResponse = null;

JsonSlurper JSON = new JsonSlurper();

try{
	jsonResponse = JSON.parseText(SampleResult.getRepsonseDataAsString());
}
catch(Exception e){
	failureMessage += &quot;Invalid JSON.\n&quot;;
}

if(prev.getResponseCode()!=&quot;200&quot;){
	failureMessage += &quot;Response code &quot;+prev.getResponseCode()+&quot; was got instead of 200&quot;;
}

if(jsonResponse.bookstore.magazine.price != &quot;2.50&quot;){
	failureMessage += &quot;The JSON response has the wrong structure&quot;;
}

if(failureMessage?.trim()){
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true);
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
